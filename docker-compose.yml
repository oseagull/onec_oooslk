# Docker Compose configuration for a 1C:Enterprise environment
#
# This setup includes:
# - 1C:Enterprise server (srv)
# - Two PostgresPro 16 databases (db_small and db_big)
# - PUSK service for 1C administration
# - pgAdmin for database management
# - Traefik as a reverse proxy and load balancer
#
# Key features:
# - Uses Docker networks for service isolation
# - Implements Traefik for routing and SSL termination
# - Persists data using Docker volumes
# - Allows easy scaling of database resources
# - Includes basic auth for PUSK access
#
# Environment variables are used for configuration (see .env file)
# Ensure all required environment variables are set before running
#
# Note: This configuration exposes services to the internet. 
# Ensure proper security measures are in place in a production environment.


version: '3.8'

x-db_common_config: &db_config
    image: ${DOCKER_REGISTRY_URL}/pgpro16:latest
    stop_grace_period: 60s
    stop_signal: SIGINT
    networks:
      - onec_net
    restart: always
    expose:
      - ${PG_PORT}

services:
  srv:
    image: $DOCKER_REGISTRY_URL/onec-server:$ONEC_VERSION
    container_name: onec-docker
    hostname: onec-docker
    restart: always
    stop_grace_period: 30s
    ports:
      - "1540-1541:1540-1541"
      - "1560-1591:1560-1591"
      - "1545:1545"
    volumes:
      - srv_data:${SRV_DATA}
      - srv_log:${SRV_LOG}
    environment:
      - TZ=${TZ}
      - INFOBASE_NAMES=${INFOBASE_NAMES}
      - JAVA_HOME=${JAVA_HOME}
    networks:
      - onec_net
    expose:
      - "1540-1541"
      - "1560-1591"
      - "1545"
      - "80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.srv.rule=Host(`onec.oooslk.ru`) && PathPrefix(`/`)"
      - "traefik.http.routers.srv.entrypoints=web"
      - "traefik.http.services.srv.loadbalancer.server.port=80"

  db_small:
    <<: *db_config
    container_name: onec-pgpro16-small
    environment:
      - INCLUDE_PGDEFAULT=yes
      - PG_PASSWORD=${PG_PASSWORD}
    hostname: db_small
    volumes:
      - pg_data_small:${PGDATA}
      - ./pg16/pgdefault.conf:/pgdefault.conf:ro

  db_big:
    <<: *db_config
    container_name: onec-pgpro16-big
    environment:
      - INCLUDE_PGDEFAULT=yes
      - PG_PASSWORD=${PG_PASSWORD}
    hostname: db_big
    volumes:
      - pg_data_big:${PGDATA}
      - ./pg16/pgdefault.conf:/pgdefault.conf:ro

  pusk:
    image: segateekb/pusk:latest
    container_name: pusk
    hostname: pusk
    volumes:
      - pusk_data:${PUSK_DATA}
      - pusk_log:${PUSK_LOG}
    restart: always
    networks:
      - onec_net
    depends_on:
      - srv
    expose:
      - 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pusk.rule=Host(`onec.oooslk.ru`)"
      - "traefik.http.routers.pusk.entrypoints=pusk"
      - "traefik.http.services.pusk.loadbalancer.server.port=8080"
      - "traefik.http.routers.pusk.middlewares=auth"

  pgadmin:
    image: dpage/pgadmin4:8.12
    hostname: pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_ADDRESS=${PGADMIN_LISTEN_ADDRESS}
      - PGADMIN_DISABLE_POSTFIX=${PGADMIN_DISABLE_POSTFIX}
    networks:
      - onec_net
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.oooslk.ru`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  traefik: 
    image: traefik:v2.5
    container_name: traefik
    environment:
    - PUSK_PASS=${PUSK_PASS}
    command:
    - "--api.insecure=true"
    - "--providers.docker=true"
    - "--providers.docker.exposedByDefault=false"
    - "--entrypoints.web.address=:80"
    - "--entrypoints.pusk.address=:8000"
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - pusk
      - srv
    restart: always
    networks:
      - onec_net 
    labels:
    - "traefik.enable=true"
    - "traefik.http.middlewares.auth.basicauth.users=${PUSK_PASS}"

volumes:
  srv_data: {}
  srv_log: {}
  pusk_data: {}
  pusk_log: {}
  pg_data_small: {}
  pg_data_big: {}



networks:
  onec_net:
    driver: bridge


